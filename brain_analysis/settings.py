"""
Django settings for brain_analysis project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see:
https://docs.djangoproject.com/en/5.1/topics/settings/
For the full list of settings and their values, see:
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path

# === ŚCIEŻKA DO KATALOGU GŁÓWNEGO PROJEKTU ===
BASE_DIR = Path(__file__).resolve().parent.parent

# === KLUCZ BEZPIECZEŃSTWA (Zmienić na bezpieczny w produkcji!) ===
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', 'django-insecure-your-secret-key')

# === TRYB DEBUG ===
DEBUG = os.getenv('DJANGO_DEBUG', 'True') == 'True'

# === DOZWOLONE HOSTY ===
ALLOWED_HOSTS = ['127.0.0.1', 'localhost']

# === ZAINSTALOWANE APLIKACJE ===
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Aplikacje własne
    'frontend',
    'api',

    # Biblioteki
    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders',  # Dodane wsparcie dla CORS (przydatne w API)
]

# === MIDDLEWARE (pośrednicy) ===
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # Obsługa CORS
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# === KONFIGURACJA REST FRAMEWORK ===
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',  # Wymagana autoryzacja
    ],
}

# === MODELE UWIERZYTELNIANIA ===
AUTH_USER_MODEL = 'api.CustomUser'

# === KONFIGURACJA URL ===
ROOT_URLCONF = 'brain_analysis.urls'

# === SZABLONY (TEMPLATES) ===
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")],  # Obsługa niestandardowych szablonów
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# === KONFIGURACJA SERWERA WSGI ===
WSGI_APPLICATION = 'brain_analysis.wsgi.application'

# === KONFIGURACJA BAZY DANYCH (SQLite) ===
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# === WALIDACJA HASEŁ ===
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# === JĘZYK I STREFA CZASOWA ===
LANGUAGE_CODE = 'pl'
TIME_ZONE = 'Europe/Warsaw'
USE_I18N = True
USE_L10N = True
USE_TZ = True

# === KONFIGURACJA PLIKÓW STATYCZNYCH ===
STATIC_URL = "/static/"
STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

# === KONFIGURACJA PLIKÓW MEDIALNYCH (dla uploadów) ===
MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

# === DOMYŚLNY TYP KLUCZA GŁÓWNEGO ===
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# === KONFIGURACJA CORS (dla API) ===
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # Jeśli używasz Reacta
    "http://127.0.0.1:8000",
]

# === TOKENY JWT ===
from datetime import timedelta
SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(days=1),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),
}

